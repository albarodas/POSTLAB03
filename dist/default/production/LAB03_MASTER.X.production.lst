

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Aug 05 12:40:57 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0000                     	;# 
   450  0001                     	;# 
   451  0002                     	;# 
   452  0003                     	;# 
   453  0004                     	;# 
   454  0005                     	;# 
   455  0006                     	;# 
   456  0007                     	;# 
   457  0008                     	;# 
   458  0009                     	;# 
   459  000A                     	;# 
   460  000B                     	;# 
   461  000C                     	;# 
   462  000D                     	;# 
   463  000E                     	;# 
   464  000E                     	;# 
   465  000F                     	;# 
   466  0010                     	;# 
   467  0011                     	;# 
   468  0012                     	;# 
   469  0013                     	;# 
   470  0014                     	;# 
   471  0015                     	;# 
   472  0015                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001D                     	;# 
   482  001E                     	;# 
   483  001F                     	;# 
   484  0081                     	;# 
   485  0085                     	;# 
   486  0086                     	;# 
   487  0087                     	;# 
   488  0088                     	;# 
   489  0089                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  008F                     	;# 
   494  0090                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0093                     	;# 
   500  0094                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  0105                     	;# 
   513  0107                     	;# 
   514  0108                     	;# 
   515  0109                     	;# 
   516  010C                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  0185                     	;# 
   522  0187                     	;# 
   523  0188                     	;# 
   524  0189                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  0000                     	;# 
   528  0001                     	;# 
   529  0002                     	;# 
   530  0003                     	;# 
   531  0004                     	;# 
   532  0005                     	;# 
   533  0006                     	;# 
   534  0007                     	;# 
   535  0008                     	;# 
   536  0009                     	;# 
   537  000A                     	;# 
   538  000B                     	;# 
   539  000C                     	;# 
   540  000D                     	;# 
   541  000E                     	;# 
   542  000E                     	;# 
   543  000F                     	;# 
   544  0010                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0013                     	;# 
   548  0014                     	;# 
   549  0015                     	;# 
   550  0015                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001B                     	;# 
   558  001C                     	;# 
   559  001D                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  0081                     	;# 
   563  0085                     	;# 
   564  0086                     	;# 
   565  0087                     	;# 
   566  0088                     	;# 
   567  0089                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  008E                     	;# 
   571  008F                     	;# 
   572  0090                     	;# 
   573  0091                     	;# 
   574  0092                     	;# 
   575  0093                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  0105                     	;# 
   591  0107                     	;# 
   592  0108                     	;# 
   593  0109                     	;# 
   594  010C                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  0185                     	;# 
   600  0187                     	;# 
   601  0188                     	;# 
   602  0189                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0013                     _SSPBUF	set	19
   606  0014                     _SSPCON	set	20
   607  0001                     _TMR0	set	1
   608  0006                     _PORTBbits	set	6
   609  000C                     _PIR1bits	set	12
   610  001F                     _ADCON0bits	set	31
   611  0008                     _PORTD	set	8
   612  0007                     _PORTCbits	set	7
   613  0006                     _PORTB	set	6
   614  000B                     _INTCONbits	set	11
   615  0094                     _SSPSTATbits	set	148
   616  0094                     _SSPSTAT	set	148
   617  008F                     _OSCCONbits	set	143
   618  0081                     _OPTION_REGbits	set	129
   619  008C                     _PIE1bits	set	140
   620  009F                     _ADCON1bits	set	159
   621  0088                     _TRISD	set	136
   622  0087                     _TRISCbits	set	135
   623  0086                     _TRISB	set	134
   624  043B                     _TRISC3	set	1083
   625  043D                     _TRISC5	set	1085
   626  0189                     _ANSELH	set	393
   627  0188                     _ANSEL	set	392
   628                           
   629                           	psect	cinit
   630  000F                     start_initialization:	
   631                           ; #config settings
   632                           
   633  000F                     __initialization:
   634                           
   635                           ; Clear objects allocated to COMMON
   636  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   637  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   638  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   639  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   640  0013                     end_of_initialization:	
   641                           ;End of C runtime variable initialization code
   642                           
   643  0013                     __end_of__initialization:
   644  0013  0183               	clrf	3
   645  0014  120A  118A  286D   	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMMON
   648  0077                     __pbssCOMMON:
   649  0077                     _counter_02:
   650  0077                     	ds	1
   651  0078                     _devolver:
   652  0078                     	ds	1
   653  0079                     _send:
   654  0079                     	ds	1
   655  007A                     _counter_TMR0:
   656  007A                     	ds	1
   657                           
   658                           	psect	cstackCOMMON
   659  0070                     __pcstackCOMMON:
   660  0070                     ?_TMR0_CARGA:
   661  0070                     ?_setup:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_spiWrite:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_spiRead:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_TMR0_init:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_initOsc:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_SPI_master:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_SPI_master:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_main:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_spiReceiveWait:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?i1_TMR0_CARGA:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??i1_TMR0_CARGA:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 1 bytes @ 0x0
   696  0070                     	ds	3
   697  0073                     ??_TMR0_CARGA:
   698  0073                     ??_spiWrite:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ??_spiRead:	
   702                           ; 1 bytes @ 0x3
   703                           
   704  0073                     ?_spiInit:	
   705                           ; 1 bytes @ 0x3
   706                           
   707  0073                     ??_TMR0_init:	
   708                           ; 1 bytes @ 0x3
   709                           
   710  0073                     ??_initOsc:	
   711                           ; 1 bytes @ 0x3
   712                           
   713  0073                     ??_spiReceiveWait:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     spiInit@sDataSample:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     spiWrite@dat:	
   720                           ; 1 bytes @ 0x3
   721                           
   722                           
   723                           ; 1 bytes @ 0x3
   724  0073                     	ds	1
   725  0074                     spiInit@sClockIdle:
   726                           
   727                           ; 1 bytes @ 0x4
   728  0074                     	ds	1
   729  0075                     TMR0_init@prescaler_VALUE:
   730  0075                     initOsc@freq:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     spiInit@sTransmitEdge:	
   734                           ; 1 bytes @ 0x5
   735                           
   736                           
   737                           ; 1 bytes @ 0x5
   738  0075                     	ds	1
   739  0076                     ??_spiInit:
   740  0076                     spiInit@sType:	
   741                           ; 1 bytes @ 0x6
   742                           
   743                           
   744                           ; 1 bytes @ 0x6
   745  0076                     	ds	1
   746  0077                     ??_setup:
   747                           
   748                           	psect	cstackBANK0
   749  0020                     __pcstackBANK0:	
   750                           ; 1 bytes @ 0x7
   751                           
   752  0020                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x0
   755  0020                     	ds	2
   756                           
   757                           	psect	maintext
   758  006D                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 81 in file "MAIN_MASTER.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       2       0       0       0
   781 ;;      Totals:         0       2       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels required when called: 4
   784 ;; This function calls:
   785 ;;		_setup
   786 ;;		_spiRead
   787 ;;		_spiWrite
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793  006D                     _main:	
   794                           ;psect for function _main
   795                           
   796  006D                     l1184:	
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   799                           
   800                           
   801                           ;MAIN_MASTER.c: 82:     setup();
   802  006D  120A  118A  20FC  120A  118A  	fcall	_setup
   803  0072                     l1186:
   804                           
   805                           ;MAIN_MASTER.c: 84:         PORTCbits.RC7 = 0;
   806  0072  1283               	bcf	3,5	;RP0=0, select bank0
   807  0073  1303               	bcf	3,6	;RP1=0, select bank0
   808  0074  1387               	bcf	7,7	;volatile
   809  0075                     l1188:
   810                           
   811                           ;MAIN_MASTER.c: 85:         _delay((unsigned long)((1)*(1000000/4000.0)));
   812  0075  3052               	movlw	82
   813  0076  1283               	bcf	3,5	;RP0=0, select bank0
   814  0077  1303               	bcf	3,6	;RP1=0, select bank0
   815  0078  00A0               	movwf	??_main
   816  0079                     u167:
   817  0079  0BA0               	decfsz	??_main,f
   818  007A  2879               	goto	u167
   819  007B  0000               	nop
   820  007C                     l1190:
   821                           
   822                           ;MAIN_MASTER.c: 88:         spiWrite(counter_02);
   823  007C  0877               	movf	_counter_02,w
   824  007D  120A  118A  2178  120A  118A  	fcall	_spiWrite
   825  0082                     l1192:
   826                           
   827                           ;MAIN_MASTER.c: 90:         if (send == 0)
   828  0082  0879               	movf	_send,w
   829  0083  1D03               	btfss	3,2
   830  0084  2886               	goto	u151
   831  0085  2887               	goto	u150
   832  0086                     u151:
   833  0086  289E               	goto	l1202
   834  0087                     u150:
   835  0087                     l1194:
   836                           
   837                           ;MAIN_MASTER.c: 91:         {;MAIN_MASTER.c: 93:             devolver = spiRead();
   838  0087  120A  118A  2168  120A  118A  	fcall	_spiRead
   839  008C  1283               	bcf	3,5	;RP0=0, select bank0
   840  008D  1303               	bcf	3,6	;RP1=0, select bank0
   841  008E  00A0               	movwf	??_main
   842  008F  0820               	movf	??_main,w
   843  0090  00F8               	movwf	_devolver
   844  0091                     l1196:
   845                           
   846                           ;MAIN_MASTER.c: 94:             send = 1;
   847  0091  01F9               	clrf	_send
   848  0092  0AF9               	incf	_send,f
   849  0093                     l1198:
   850                           
   851                           ;MAIN_MASTER.c: 95:             _delay((unsigned long)((1)*(1000000/4000.0)));
   852  0093  3052               	movlw	82
   853  0094  1283               	bcf	3,5	;RP0=0, select bank0
   854  0095  1303               	bcf	3,6	;RP1=0, select bank0
   855  0096  00A0               	movwf	??_main
   856  0097                     u177:
   857  0097  0BA0               	decfsz	??_main,f
   858  0098  2897               	goto	u177
   859  0099  0000               	nop
   860  009A                     l1200:
   861                           
   862                           ;MAIN_MASTER.c: 97:             PORTCbits.RC7 = 1;
   863  009A  1283               	bcf	3,5	;RP0=0, select bank0
   864  009B  1303               	bcf	3,6	;RP1=0, select bank0
   865  009C  1787               	bsf	7,7	;volatile
   866                           
   867                           ;MAIN_MASTER.c: 99:         } else
   868  009D  28B0               	goto	l1208
   869  009E                     l1202:
   870                           
   871                           ;MAIN_MASTER.c: 100:         {;MAIN_MASTER.c: 102:             PORTB = spiRead();
   872  009E  120A  118A  2168  120A  118A  	fcall	_spiRead
   873  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   874  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   875  00A5  0086               	movwf	6	;volatile
   876  00A6                     l1204:
   877                           
   878                           ;MAIN_MASTER.c: 103:             _delay((unsigned long)((1)*(1000000/4000.0)));
   879  00A6  3052               	movlw	82
   880  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   881  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   882  00A9  00A0               	movwf	??_main
   883  00AA                     u187:
   884  00AA  0BA0               	decfsz	??_main,f
   885  00AB  28AA               	goto	u187
   886  00AC  0000               	nop
   887  00AD                     l1206:
   888                           
   889                           ;MAIN_MASTER.c: 105:             PORTCbits.RC7 = 1;
   890  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   891  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   892  00AF  1787               	bsf	7,7	;volatile
   893  00B0                     l1208:
   894                           
   895                           ;MAIN_MASTER.c: 107:         _delay((unsigned long)((100)*(1000000/4000.0)));
   896  00B0  3021               	movlw	33
   897  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   898  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   899  00B3  00A1               	movwf	??_main+1
   900  00B4  3075               	movlw	117
   901  00B5  00A0               	movwf	??_main
   902  00B6                     u197:
   903  00B6  0BA0               	decfsz	??_main,f
   904  00B7  28B6               	goto	u197
   905  00B8  0BA1               	decfsz	??_main+1,f
   906  00B9  28B6               	goto	u197
   907  00BA  28BB               	nop2
   908  00BB  2872               	goto	l1186
   909  00BC  120A  118A  280C   	ljmp	start
   910  00BF                     __end_of_main:
   911                           
   912                           	psect	text1
   913  0178                     __ptext1:	
   914 ;; *************** function _spiWrite *****************
   915 ;; Defined at:
   916 ;;		line 34 in file "SPI.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  dat             1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  dat             1    3[COMMON] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         1       0       0       0       0
   934 ;;Total ram usage:        1 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 2
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944  0178                     _spiWrite:	
   945                           ;psect for function _spiWrite
   946                           
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _spiWrite: [wreg]
   950                           ;spiWrite@dat stored from wreg
   951  0178  00F3               	movwf	spiWrite@dat
   952  0179                     l882:
   953                           
   954                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   955  0179  0873               	movf	spiWrite@dat,w
   956  017A  1283               	bcf	3,5	;RP0=0, select bank0
   957  017B  1303               	bcf	3,6	;RP1=0, select bank0
   958  017C  0093               	movwf	19	;volatile
   959  017D                     l194:
   960  017D  0008               	return
   961  017E                     __end_of_spiWrite:
   962                           
   963                           	psect	text2
   964  0168                     __ptext2:	
   965 ;; *************** function _spiRead *****************
   966 ;; Defined at:
   967 ;;		line 47 in file "SPI.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      unsigned char 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 3
   988 ;; This function calls:
   989 ;;		_spiReceiveWait
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995  0168                     _spiRead:	
   996                           ;psect for function _spiRead
   997                           
   998  0168                     l884:	
   999                           ;incstack = 0
  1000                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1001                           
  1002                           
  1003                           ;SPI.c: 49:     spiReceiveWait();
  1004  0168  120A  118A  2171  120A  118A  	fcall	_spiReceiveWait
  1005  016D                     l886:
  1006                           
  1007                           ;SPI.c: 50:     return(SSPBUF);
  1008  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1009  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1010  016F  0813               	movf	19,w	;volatile
  1011  0170                     l202:
  1012  0170  0008               	return
  1013  0171                     __end_of_spiRead:
  1014                           
  1015                           	psect	text3
  1016  0171                     __ptext3:	
  1017 ;; *************** function _spiReceiveWait *****************
  1018 ;; Defined at:
  1019 ;;		line 29 in file "SPI.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		None
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 2
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_spiRead
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047  0171                     _spiReceiveWait:	
  1048                           ;psect for function _spiReceiveWait
  1049                           
  1050  0171                     l860:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _spiReceiveWait: []
  1053                           
  1054  0171                     l188:	
  1055                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1056                           
  1057  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0173  1C14               	btfss	20,0	;volatile
  1060  0174  2976               	goto	u31
  1061  0175  2977               	goto	u30
  1062  0176                     u31:
  1063  0176  2971               	goto	l188
  1064  0177                     u30:
  1065  0177                     l191:
  1066  0177  0008               	return
  1067  0178                     __end_of_spiReceiveWait:
  1068                           
  1069                           	psect	text4
  1070  00FC                     __ptext4:	
  1071 ;; *************** function _setup *****************
  1072 ;; Defined at:
  1073 ;;		line 115 in file "MAIN_MASTER.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 3
  1094 ;; This function calls:
  1095 ;;		_TMR0_CARGA
  1096 ;;		_TMR0_init
  1097 ;;		_initOsc
  1098 ;;		_spiInit
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104  00FC                     _setup:	
  1105                           ;psect for function _setup
  1106                           
  1107  00FC                     l1098:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1110                           
  1111                           
  1112                           ;MAIN_MASTER.c: 117:     ANSEL = 0;
  1113  00FC  1683               	bsf	3,5	;RP0=1, select bank3
  1114  00FD  1703               	bsf	3,6	;RP1=1, select bank3
  1115  00FE  0188               	clrf	8	;volatile
  1116                           
  1117                           ;MAIN_MASTER.c: 118:     ANSELH = 0;
  1118  00FF  0189               	clrf	9	;volatile
  1119                           
  1120                           ;MAIN_MASTER.c: 120:     TRISB = 0;
  1121  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1122  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1123  0102  0186               	clrf	6	;volatile
  1124                           
  1125                           ;MAIN_MASTER.c: 121:     PORTB = 0;
  1126  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0105  0186               	clrf	6	;volatile
  1129  0106                     l1100:
  1130                           
  1131                           ;MAIN_MASTER.c: 122:     TRISCbits.TRISC7 = 0;
  1132  0106  1683               	bsf	3,5	;RP0=1, select bank1
  1133  0107  1303               	bcf	3,6	;RP1=0, select bank1
  1134  0108  1387               	bcf	7,7	;volatile
  1135  0109                     l1102:
  1136                           
  1137                           ;MAIN_MASTER.c: 123:     PORTCbits.RC7 = 1;
  1138  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1139  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  010B  1787               	bsf	7,7	;volatile
  1141                           
  1142                           ;MAIN_MASTER.c: 125:     TRISD = 0;
  1143  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1144  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1145  010E  0188               	clrf	8	;volatile
  1146                           
  1147                           ;MAIN_MASTER.c: 126:     PORTD = 0;
  1148  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0111  0188               	clrf	8	;volatile
  1151  0112                     l1104:
  1152                           
  1153                           ;MAIN_MASTER.c: 129:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1154  0112  01F3               	clrf	spiInit@sDataSample
  1155  0113  01F4               	clrf	spiInit@sClockIdle
  1156  0114  01F5               	clrf	spiInit@sTransmitEdge
  1157  0115  3020               	movlw	32
  1158  0116  120A  118A  2152  120A  118A  	fcall	_spiInit
  1159  011B                     l1106:
  1160                           
  1161                           ;MAIN_MASTER.c: 131:     TMR0_init(255);
  1162  011B  30FF               	movlw	255
  1163  011C  120A  118A  2017  120A  118A  	fcall	_TMR0_init
  1164  0121                     l1108:
  1165                           
  1166                           ;MAIN_MASTER.c: 132:     TMR0_CARGA();
  1167  0121  120A  118A  217E  120A  118A  	fcall	_TMR0_CARGA
  1168  0126                     l1110:
  1169                           
  1170                           ;MAIN_MASTER.c: 133:     initOsc(0);
  1171  0126  3000               	movlw	0
  1172  0127  120A  118A  20BF  120A  118A  	fcall	_initOsc
  1173  012C                     l1112:
  1174                           
  1175                           ;MAIN_MASTER.c: 136:     INTCONbits.GIE = 1;
  1176  012C  178B               	bsf	11,7	;volatile
  1177  012D                     l1114:
  1178                           
  1179                           ;MAIN_MASTER.c: 137:     INTCONbits.PEIE = 1;
  1180  012D  170B               	bsf	11,6	;volatile
  1181  012E                     l62:
  1182  012E  0008               	return
  1183  012F                     __end_of_setup:
  1184                           
  1185                           	psect	text5
  1186  0152                     __ptext5:	
  1187 ;; *************** function _spiInit *****************
  1188 ;; Defined at:
  1189 ;;		line 12 in file "SPI.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  sType           1    wreg     enum E1292
  1192 ;;  sDataSample     1    3[COMMON] enum E1300
  1193 ;;  sClockIdle      1    4[COMMON] enum E1304
  1194 ;;  sTransmitEdg    1    5[COMMON] enum E1308
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  sType           1    6[COMMON] enum E1292
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         3       0       0       0       0
  1207 ;;      Locals:         1       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         4       0       0       0       0
  1210 ;;Total ram usage:        4 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 2
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_setup
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220  0152                     _spiInit:	
  1221                           ;psect for function _spiInit
  1222                           
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1226                           ;spiInit@sType stored from wreg
  1227  0152  00F6               	movwf	spiInit@sType
  1228  0153                     l1088:
  1229                           
  1230                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1231  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0155  1287               	bcf	7,5	;volatile
  1234                           
  1235                           ;SPI.c: 15:     if(sType & 0b00000100)
  1236  0156  1D76               	btfss	spiInit@sType,2
  1237  0157  2959               	goto	u131
  1238  0158  295A               	goto	u130
  1239  0159                     u131:
  1240  0159  295E               	goto	l1094
  1241  015A                     u130:
  1242  015A                     l1090:
  1243                           
  1244                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1245  015A  0875               	movf	spiInit@sTransmitEdge,w
  1246  015B  0094               	movwf	20	;volatile
  1247  015C                     l1092:
  1248                           
  1249                           ;SPI.c: 18:         TRISC3 = 1;
  1250  015C  1587               	bsf	7,3	;volatile
  1251                           
  1252                           ;SPI.c: 19:     }
  1253  015D  2962               	goto	l184
  1254  015E                     l1094:
  1255                           
  1256                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1257  015E  0873               	movf	spiInit@sDataSample,w
  1258  015F  0475               	iorwf	spiInit@sTransmitEdge,w
  1259  0160  0094               	movwf	20	;volatile
  1260  0161                     l1096:
  1261                           
  1262                           ;SPI.c: 23:         TRISC3 = 0;
  1263  0161  1187               	bcf	7,3	;volatile
  1264  0162                     l184:	
  1265                           ;SPI.c: 24:     }
  1266                           
  1267                           
  1268                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1269  0162  0876               	movf	spiInit@sType,w
  1270  0163  0474               	iorwf	spiInit@sClockIdle,w
  1271  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0166  0094               	movwf	20	;volatile
  1274  0167                     l185:
  1275  0167  0008               	return
  1276  0168                     __end_of_spiInit:
  1277                           
  1278                           	psect	text6
  1279  00BF                     __ptext6:	
  1280 ;; *************** function _initOsc *****************
  1281 ;; Defined at:
  1282 ;;		line 16 in file "oscilador.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  freq            1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  freq            1    5[COMMON] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0
  1298 ;;      Temps:          2       0       0       0       0
  1299 ;;      Totals:         3       0       0       0       0
  1300 ;;Total ram usage:        3 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 2
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_setup
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310  00BF                     _initOsc:	
  1311                           ;psect for function _initOsc
  1312                           
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1316                           ;initOsc@freq stored from wreg
  1317  00BF  00F5               	movwf	initOsc@freq
  1318  00C0                     l828:
  1319                           
  1320                           ;oscilador.c: 17:     OSCCONbits.IRCF = freq;
  1321  00C0  0875               	movf	initOsc@freq,w
  1322  00C1  00F3               	movwf	??_initOsc
  1323  00C2  0EF3               	swapf	??_initOsc,f
  1324  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1325  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1326  00C5  080F               	movf	15,w	;volatile
  1327  00C6  0673               	xorwf	??_initOsc,w
  1328  00C7  398F               	andlw	-113
  1329  00C8  0673               	xorwf	??_initOsc,w
  1330  00C9  008F               	movwf	15	;volatile
  1331                           
  1332                           ;oscilador.c: 18:     switch(freq){
  1333  00CA  28E5               	goto	l852
  1334  00CB                     l830:
  1335                           
  1336                           ;oscilador.c: 21:             OSCCONbits.IRCF = 0b100;
  1337  00CB  080F               	movf	15,w	;volatile
  1338  00CC  398F               	andlw	-113
  1339  00CD  3840               	iorlw	64
  1340  00CE  008F               	movwf	15	;volatile
  1341  00CF                     l832:
  1342                           
  1343                           ;oscilador.c: 22:             OSCCONbits.SCS = 1;
  1344  00CF  140F               	bsf	15,0	;volatile
  1345                           
  1346                           ;oscilador.c: 23:             break;
  1347  00D0  28FB               	goto	l168
  1348  00D1                     l834:
  1349                           
  1350                           ;oscilador.c: 26:             OSCCONbits.IRCF = 0b101;
  1351  00D1  080F               	movf	15,w	;volatile
  1352  00D2  398F               	andlw	-113
  1353  00D3  3850               	iorlw	80
  1354  00D4  008F               	movwf	15	;volatile
  1355  00D5                     l836:
  1356                           
  1357                           ;oscilador.c: 27:             OSCCONbits.SCS = 1;
  1358  00D5  140F               	bsf	15,0	;volatile
  1359                           
  1360                           ;oscilador.c: 28:             break;
  1361  00D6  28FB               	goto	l168
  1362  00D7                     l838:
  1363                           
  1364                           ;oscilador.c: 31:             OSCCONbits.IRCF = 0b110;
  1365  00D7  080F               	movf	15,w	;volatile
  1366  00D8  398F               	andlw	-113
  1367  00D9  3860               	iorlw	96
  1368  00DA  008F               	movwf	15	;volatile
  1369  00DB                     l840:
  1370                           
  1371                           ;oscilador.c: 32:             OSCCONbits.SCS = 1;
  1372  00DB  140F               	bsf	15,0	;volatile
  1373                           
  1374                           ;oscilador.c: 33:             break;
  1375  00DC  28FB               	goto	l168
  1376  00DD                     l842:
  1377                           
  1378                           ;oscilador.c: 35:             OSCCONbits.IRCF = 0b111;
  1379  00DD  3070               	movlw	112
  1380  00DE  048F               	iorwf	15,f	;volatile
  1381  00DF                     l844:
  1382                           
  1383                           ;oscilador.c: 36:             OSCCONbits.SCS = 1;
  1384  00DF  140F               	bsf	15,0	;volatile
  1385                           
  1386                           ;oscilador.c: 37:             break;
  1387  00E0  28FB               	goto	l168
  1388  00E1                     l846:
  1389                           
  1390                           ;oscilador.c: 40:             OSCCONbits.IRCF = 0b111;
  1391  00E1  3070               	movlw	112
  1392  00E2  048F               	iorwf	15,f	;volatile
  1393  00E3                     l848:
  1394                           
  1395                           ;oscilador.c: 41:             OSCCONbits.SCS = 1;
  1396  00E3  140F               	bsf	15,0	;volatile
  1397                           
  1398                           ;oscilador.c: 42:             break;
  1399  00E4  28FB               	goto	l168
  1400  00E5                     l852:
  1401  00E5  0875               	movf	initOsc@freq,w
  1402  00E6  00F3               	movwf	??_initOsc
  1403  00E7  01F4               	clrf	??_initOsc+1
  1404                           
  1405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1406                           ; Switch size 1, requested type "simple"
  1407                           ; Number of cases is 1, Range of values is 0 to 0
  1408                           ; switch strategies available:
  1409                           ; Name         Instructions Cycles
  1410                           ; simple_byte            4     3 (average)
  1411                           ; direct_byte           11     8 (fixed)
  1412                           ; jumptable            260     6 (fixed)
  1413                           ;	Chosen strategy is simple_byte
  1414  00E8  0874               	movf	??_initOsc+1,w
  1415  00E9  3A00               	xorlw	0	; case 0
  1416  00EA  1903               	skipnz
  1417  00EB  28ED               	goto	l1250
  1418  00EC  28E1               	goto	l846
  1419  00ED                     l1250:
  1420                           
  1421                           ; Switch size 1, requested type "simple"
  1422                           ; Number of cases is 4, Range of values is 0 to 3
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte           13     7 (average)
  1426                           ; direct_byte           20     8 (fixed)
  1427                           ; jumptable            260     6 (fixed)
  1428                           ;	Chosen strategy is simple_byte
  1429  00ED  0873               	movf	??_initOsc,w
  1430  00EE  3A00               	xorlw	0	; case 0
  1431  00EF  1903               	skipnz
  1432  00F0  28CB               	goto	l830
  1433  00F1  3A01               	xorlw	1	; case 1
  1434  00F2  1903               	skipnz
  1435  00F3  28D1               	goto	l834
  1436  00F4  3A03               	xorlw	3	; case 2
  1437  00F5  1903               	skipnz
  1438  00F6  28D7               	goto	l838
  1439  00F7  3A01               	xorlw	1	; case 3
  1440  00F8  1903               	skipnz
  1441  00F9  28DD               	goto	l842
  1442  00FA  28E1               	goto	l846
  1443  00FB                     l168:
  1444  00FB  0008               	return
  1445  00FC                     __end_of_initOsc:
  1446                           
  1447                           	psect	text7
  1448  0017                     __ptext7:	
  1449 ;; *************** function _TMR0_init *****************
  1450 ;; Defined at:
  1451 ;;		line 14 in file "TMR0.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  prescaler_VA    1    wreg     unsigned char 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  prescaler_VA    1    5[COMMON] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0
  1467 ;;      Temps:          2       0       0       0       0
  1468 ;;      Totals:         3       0       0       0       0
  1469 ;;Total ram usage:        3 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 2
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_setup
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479  0017                     _TMR0_init:	
  1480                           ;psect for function _TMR0_init
  1481                           
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _TMR0_init: [wreg-fsr0h+status,2+status,0]
  1485                           ;TMR0_init@prescaler_VALUE stored from wreg
  1486  0017  00F5               	movwf	TMR0_init@prescaler_VALUE
  1487  0018                     l808:
  1488                           
  1489                           ;TMR0.c: 15:     OPTION_REGbits.T0CS = 0;
  1490  0018  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0019  1303               	bcf	3,6	;RP1=0, select bank1
  1492  001A  1281               	bcf	1,5	;volatile
  1493  001B                     l810:
  1494                           
  1495                           ;TMR0.c: 16:     if (prescaler_VALUE == 0)
  1496  001B  0875               	movf	TMR0_init@prescaler_VALUE,w
  1497  001C  1D03               	btfss	3,2
  1498  001D  281F               	goto	u21
  1499  001E  2820               	goto	u20
  1500  001F                     u21:
  1501  001F  2822               	goto	l141
  1502  0020                     u20:
  1503  0020                     l812:
  1504                           
  1505                           ;TMR0.c: 17:         OPTION_REGbits.PSA = 1;
  1506  0020  1581               	bsf	1,3	;volatile
  1507  0021  2844               	goto	l816
  1508  0022                     l141:	
  1509                           ;TMR0.c: 18:     else
  1510                           
  1511                           
  1512                           ;TMR0.c: 19:         OPTION_REGbits.PSA = 0;
  1513  0022  1181               	bcf	1,3	;volatile
  1514  0023  2844               	goto	l816
  1515  0024                     l144:	
  1516                           ;TMR0.c: 21:     {;TMR0.c: 22:         case 2:
  1517                           
  1518                           
  1519                           ;TMR0.c: 23:             OPTION_REGbits.PS0 = 0;
  1520  0024  1001               	bcf	1,0	;volatile
  1521                           
  1522                           ;TMR0.c: 24:             OPTION_REGbits.PS1 = 0;
  1523  0025  1081               	bcf	1,1	;volatile
  1524                           
  1525                           ;TMR0.c: 25:             OPTION_REGbits.PS2 = 0;
  1526  0026  1101               	bcf	1,2	;volatile
  1527                           
  1528                           ;TMR0.c: 26:             break;
  1529  0027  2866               	goto	l818
  1530  0028                     l146:	
  1531                           ;TMR0.c: 28:         case 4:
  1532                           
  1533                           
  1534                           ;TMR0.c: 29:             OPTION_REGbits.PS0 = 1;
  1535  0028  1401               	bsf	1,0	;volatile
  1536                           
  1537                           ;TMR0.c: 30:             OPTION_REGbits.PS1 = 0;
  1538  0029  1081               	bcf	1,1	;volatile
  1539                           
  1540                           ;TMR0.c: 31:             OPTION_REGbits.PS2 = 0;
  1541  002A  1101               	bcf	1,2	;volatile
  1542                           
  1543                           ;TMR0.c: 32:             break;
  1544  002B  2866               	goto	l818
  1545  002C                     l147:	
  1546                           ;TMR0.c: 34:         case 8:
  1547                           
  1548                           
  1549                           ;TMR0.c: 35:             OPTION_REGbits.PS0 = 0;
  1550  002C  1001               	bcf	1,0	;volatile
  1551                           
  1552                           ;TMR0.c: 36:             OPTION_REGbits.PS1 = 1;
  1553  002D  1481               	bsf	1,1	;volatile
  1554                           
  1555                           ;TMR0.c: 37:             OPTION_REGbits.PS2 = 0;
  1556  002E  1101               	bcf	1,2	;volatile
  1557                           
  1558                           ;TMR0.c: 38:             break;
  1559  002F  2866               	goto	l818
  1560  0030                     l148:	
  1561                           ;TMR0.c: 40:         case 16:
  1562                           
  1563                           
  1564                           ;TMR0.c: 41:             OPTION_REGbits.PS0 = 1;
  1565  0030  1401               	bsf	1,0	;volatile
  1566                           
  1567                           ;TMR0.c: 42:             OPTION_REGbits.PS1 = 1;
  1568  0031  1481               	bsf	1,1	;volatile
  1569                           
  1570                           ;TMR0.c: 43:             OPTION_REGbits.PS2 = 0;
  1571  0032  1101               	bcf	1,2	;volatile
  1572                           
  1573                           ;TMR0.c: 44:             break;
  1574  0033  2866               	goto	l818
  1575  0034                     l149:	
  1576                           ;TMR0.c: 46:         case 32:
  1577                           
  1578                           
  1579                           ;TMR0.c: 47:             OPTION_REGbits.PS0 = 0;
  1580  0034  1001               	bcf	1,0	;volatile
  1581                           
  1582                           ;TMR0.c: 48:             OPTION_REGbits.PS1 = 0;
  1583  0035  1081               	bcf	1,1	;volatile
  1584                           
  1585                           ;TMR0.c: 49:             OPTION_REGbits.PS2 = 1;
  1586  0036  1501               	bsf	1,2	;volatile
  1587                           
  1588                           ;TMR0.c: 50:             break;
  1589  0037  2866               	goto	l818
  1590  0038                     l150:	
  1591                           ;TMR0.c: 52:         case 64:
  1592                           
  1593                           
  1594                           ;TMR0.c: 53:             OPTION_REGbits.PS0 = 1;
  1595  0038  1401               	bsf	1,0	;volatile
  1596                           
  1597                           ;TMR0.c: 54:             OPTION_REGbits.PS1 = 0;
  1598  0039  1081               	bcf	1,1	;volatile
  1599                           
  1600                           ;TMR0.c: 55:             OPTION_REGbits.PS2 = 1;
  1601  003A  1501               	bsf	1,2	;volatile
  1602                           
  1603                           ;TMR0.c: 56:             break;
  1604  003B  2866               	goto	l818
  1605  003C                     l151:	
  1606                           ;TMR0.c: 58:         case 128:
  1607                           
  1608                           
  1609                           ;TMR0.c: 59:             OPTION_REGbits.PS0 = 0;
  1610  003C  1001               	bcf	1,0	;volatile
  1611                           
  1612                           ;TMR0.c: 60:             OPTION_REGbits.PS1 = 1;
  1613  003D  1481               	bsf	1,1	;volatile
  1614                           
  1615                           ;TMR0.c: 61:             OPTION_REGbits.PS2 = 1;
  1616  003E  1501               	bsf	1,2	;volatile
  1617                           
  1618                           ;TMR0.c: 62:             break;
  1619  003F  2866               	goto	l818
  1620  0040                     l152:	
  1621                           ;TMR0.c: 64:         case 255:
  1622                           
  1623                           
  1624                           ;TMR0.c: 65:             OPTION_REGbits.PS0 = 1;
  1625  0040  1401               	bsf	1,0	;volatile
  1626                           
  1627                           ;TMR0.c: 66:             OPTION_REGbits.PS1 = 1;
  1628  0041  1481               	bsf	1,1	;volatile
  1629                           
  1630                           ;TMR0.c: 67:             OPTION_REGbits.PS2 = 1;
  1631  0042  1501               	bsf	1,2	;volatile
  1632                           
  1633                           ;TMR0.c: 68:             break;
  1634  0043  2866               	goto	l818
  1635  0044                     l816:
  1636  0044  0875               	movf	TMR0_init@prescaler_VALUE,w
  1637  0045  00F3               	movwf	??_TMR0_init
  1638  0046  01F4               	clrf	??_TMR0_init+1
  1639                           
  1640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 1, Range of values is 0 to 0
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            4     3 (average)
  1646                           ; direct_byte           11     8 (fixed)
  1647                           ; jumptable            260     6 (fixed)
  1648                           ;	Chosen strategy is simple_byte
  1649  0047  0874               	movf	??_TMR0_init+1,w
  1650  0048  3A00               	xorlw	0	; case 0
  1651  0049  1903               	skipnz
  1652  004A  284C               	goto	l1252
  1653  004B  2866               	goto	l818
  1654  004C                     l1252:
  1655                           
  1656                           ; Switch size 1, requested type "simple"
  1657                           ; Number of cases is 8, Range of values is 2 to 255
  1658                           ; switch strategies available:
  1659                           ; Name         Instructions Cycles
  1660                           ; simple_byte           25    13 (average)
  1661                           ; jumptable            263     9 (fixed)
  1662                           ;	Chosen strategy is simple_byte
  1663  004C  0873               	movf	??_TMR0_init,w
  1664  004D  3A02               	xorlw	2	; case 2
  1665  004E  1903               	skipnz
  1666  004F  2824               	goto	l144
  1667  0050  3A06               	xorlw	6	; case 4
  1668  0051  1903               	skipnz
  1669  0052  2828               	goto	l146
  1670  0053  3A0C               	xorlw	12	; case 8
  1671  0054  1903               	skipnz
  1672  0055  282C               	goto	l147
  1673  0056  3A18               	xorlw	24	; case 16
  1674  0057  1903               	skipnz
  1675  0058  2830               	goto	l148
  1676  0059  3A30               	xorlw	48	; case 32
  1677  005A  1903               	skipnz
  1678  005B  2834               	goto	l149
  1679  005C  3A60               	xorlw	96	; case 64
  1680  005D  1903               	skipnz
  1681  005E  2838               	goto	l150
  1682  005F  3AC0               	xorlw	192	; case 128
  1683  0060  1903               	skipnz
  1684  0061  283C               	goto	l151
  1685  0062  3A7F               	xorlw	127	; case 255
  1686  0063  1903               	skipnz
  1687  0064  2840               	goto	l152
  1688  0065  2866               	goto	l818
  1689  0066                     l818:
  1690                           
  1691                           ;TMR0.c: 70:     TMR0 = 61;
  1692  0066  303D               	movlw	61
  1693  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0069  0081               	movwf	1	;volatile
  1696  006A                     l820:
  1697                           
  1698                           ;TMR0.c: 71:     INTCONbits.T0IE = 1;
  1699  006A  168B               	bsf	11,5	;volatile
  1700  006B                     l822:
  1701                           
  1702                           ;TMR0.c: 72:     INTCONbits.T0IF = 0;
  1703  006B  110B               	bcf	11,2	;volatile
  1704  006C                     l153:
  1705  006C  0008               	return
  1706  006D                     __end_of_TMR0_init:
  1707                           
  1708                           	psect	text8
  1709  017E                     __ptext8:	
  1710 ;; *************** function _TMR0_CARGA *****************
  1711 ;; Defined at:
  1712 ;;		line 75 in file "TMR0.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0
  1729 ;;      Totals:         0       0       0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 2
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_setup
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740  017E                     _TMR0_CARGA:	
  1741                           ;psect for function _TMR0_CARGA
  1742                           
  1743  017E                     l794:	
  1744                           ;incstack = 0
  1745                           ; Regs used in _TMR0_CARGA: [wreg]
  1746                           
  1747                           
  1748                           ;TMR0.c: 77:     TMR0 = 61;
  1749  017E  303D               	movlw	61
  1750  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0181  0081               	movwf	1	;volatile
  1753  0182                     l796:
  1754                           
  1755                           ;TMR0.c: 78:     INTCONbits.T0IF = 0;
  1756  0182  110B               	bcf	11,2	;volatile
  1757  0183                     l156:
  1758  0183  0008               	return
  1759  0184                     __end_of_TMR0_CARGA:
  1760                           
  1761                           	psect	text9
  1762  012F                     __ptext9:	
  1763 ;; *************** function _SPI_master *****************
  1764 ;; Defined at:
  1765 ;;		line 64 in file "MAIN_MASTER.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0
  1781 ;;      Temps:          3       0       0       0       0
  1782 ;;      Totals:         3       0       0       0       0
  1783 ;;Total ram usage:        3 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 1
  1786 ;; This function calls:
  1787 ;;		i1_TMR0_CARGA
  1788 ;; This function is called by:
  1789 ;;		Interrupt level 1
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793  012F                     _SPI_master:	
  1794                           ;psect for function _SPI_master
  1795                           
  1796  012F                     i1l914:
  1797                           
  1798                           ;MAIN_MASTER.c: 65:     if(INTCONbits.T0IF){
  1799  012F  1D0B               	btfss	11,2	;volatile
  1800  0130  2932               	goto	u4_21
  1801  0131  2933               	goto	u4_20
  1802  0132                     u4_21:
  1803  0132  294B               	goto	i1l49
  1804  0133                     u4_20:
  1805  0133                     i1l916:
  1806                           
  1807                           ;MAIN_MASTER.c: 66:         counter_TMR0++;
  1808  0133  3001               	movlw	1
  1809  0134  00F0               	movwf	??_SPI_master
  1810  0135  0870               	movf	??_SPI_master,w
  1811  0136  07FA               	addwf	_counter_TMR0,f
  1812                           
  1813                           ;MAIN_MASTER.c: 67:         if (counter_TMR0 == 5)
  1814  0137  3005               	movlw	5
  1815  0138  067A               	xorwf	_counter_TMR0,w
  1816  0139  1D03               	btfss	3,2
  1817  013A  293C               	goto	u5_21
  1818  013B  293D               	goto	u5_20
  1819  013C                     u5_21:
  1820  013C  2946               	goto	i1l924
  1821  013D                     u5_20:
  1822  013D                     i1l918:
  1823                           
  1824                           ;MAIN_MASTER.c: 68:         {;MAIN_MASTER.c: 69:             counter_02++;
  1825  013D  3001               	movlw	1
  1826  013E  00F0               	movwf	??_SPI_master
  1827  013F  0870               	movf	??_SPI_master,w
  1828  0140  07F7               	addwf	_counter_02,f
  1829  0141                     i1l920:
  1830                           
  1831                           ;MAIN_MASTER.c: 70:             PORTB = counter_02;
  1832  0141  0877               	movf	_counter_02,w
  1833  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0144  0086               	movwf	6	;volatile
  1836  0145                     i1l922:
  1837                           
  1838                           ;MAIN_MASTER.c: 71:             counter_TMR0 = 0;
  1839  0145  01FA               	clrf	_counter_TMR0
  1840  0146                     i1l924:
  1841                           
  1842                           ;MAIN_MASTER.c: 73:         TMR0_CARGA();
  1843  0146  120A  118A  2184  120A  118A  	fcall	i1_TMR0_CARGA
  1844  014B                     i1l49:
  1845  014B  0872               	movf	??_SPI_master+2,w
  1846  014C  008A               	movwf	10
  1847  014D  0E71               	swapf	??_SPI_master+1,w
  1848  014E  0083               	movwf	3
  1849  014F  0EFE               	swapf	btemp,f
  1850  0150  0E7E               	swapf	btemp,w
  1851  0151  0009               	retfie
  1852  0152                     __end_of_SPI_master:
  1853                           
  1854                           	psect	intentry
  1855  0004                     __pintentry:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _SPI_master: [wreg+status,2+status,0+pclath+cstack]
  1858                           
  1859  0004                     interrupt_function:
  1860  007E                     saved_w	set	btemp
  1861  0004  00FE               	movwf	btemp
  1862  0005  0E03               	swapf	3,w
  1863  0006  00F1               	movwf	??_SPI_master+1
  1864  0007  080A               	movf	10,w
  1865  0008  00F2               	movwf	??_SPI_master+2
  1866  0009  120A  118A  292F   	ljmp	_SPI_master
  1867                           
  1868                           	psect	text10
  1869  0184                     __ptext10:	
  1870 ;; *************** function i1_TMR0_CARGA *****************
  1871 ;; Defined at:
  1872 ;;		line 75 in file "TMR0.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_SPI_master
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899  0184                     i1_TMR0_CARGA:	
  1900                           ;psect for function i1_TMR0_CARGA
  1901                           
  1902  0184                     i1l910:	
  1903                           ;incstack = 0
  1904                           ; Regs used in i1_TMR0_CARGA: [wreg]
  1905                           
  1906                           
  1907                           ;TMR0.c: 77:     TMR0 = 61;
  1908  0184  303D               	movlw	61
  1909  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0187  0081               	movwf	1	;volatile
  1912  0188                     i1l912:
  1913                           
  1914                           ;TMR0.c: 78:     INTCONbits.T0IF = 0;
  1915  0188  110B               	bcf	11,2	;volatile
  1916  0189                     i1l156:
  1917  0189  0008               	return
  1918  018A                     __end_ofi1_TMR0_CARGA:
  1919  007E                     btemp	set	126	;btemp
  1920  007E                     wtemp0	set	126
  1921                           
  1922                           	psect	idloc
  1923                           
  1924                           ;Config register IDLOC0 @ 0x2000
  1925                           ;	unspecified, using default values
  1926  2000                     	org	8192
  1927  2000  3FFF               	dw	16383
  1928                           
  1929                           ;Config register IDLOC1 @ 0x2001
  1930                           ;	unspecified, using default values
  1931  2001                     	org	8193
  1932  2001  3FFF               	dw	16383
  1933                           
  1934                           ;Config register IDLOC2 @ 0x2002
  1935                           ;	unspecified, using default values
  1936  2002                     	org	8194
  1937  2002  3FFF               	dw	16383
  1938                           
  1939                           ;Config register IDLOC3 @ 0x2003
  1940                           ;	unspecified, using default values
  1941  2003                     	org	8195
  1942  2003  3FFF               	dw	16383
  1943                           
  1944                           	psect	config
  1945                           
  1946                           ;Config register CONFIG1 @ 0x2007
  1947                           ;	Oscillator Selection bits
  1948                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1949                           ;	Watchdog Timer Enable bit
  1950                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1951                           ;	Power-up Timer Enable bit
  1952                           ;	PWRTE = OFF, PWRT disabled
  1953                           ;	RE3/MCLR pin function select bit
  1954                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1955                           ;	Code Protection bit
  1956                           ;	CP = OFF, Program memory code protection is disabled
  1957                           ;	Data Code Protection bit
  1958                           ;	CPD = OFF, Data memory code protection is disabled
  1959                           ;	Brown Out Reset Selection bits
  1960                           ;	BOREN = OFF, BOR disabled
  1961                           ;	Internal External Switchover bit
  1962                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1963                           ;	Fail-Safe Clock Monitor Enabled bit
  1964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1965                           ;	Low Voltage Programming Enable bit
  1966                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1967                           ;	In-Circuit Debugger Mode bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969  2007                     	org	8199
  1970  2007  20D4               	dw	8404
  1971                           
  1972                           ;Config register CONFIG2 @ 0x2008
  1973                           ;	Brown-out Reset Selection bit
  1974                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1975                           ;	Flash Program Memory Self Write Enable bits
  1976                           ;	WRT = OFF, Write protection off
  1977  2008                     	org	8200
  1978  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _SPI_master in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_master in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_master in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_master in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_master in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     435
                                              0 BANK0      2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     420
                         _TMR0_CARGA
                          _TMR0_init
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_init                                            3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_CARGA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _SPI_master                                           3     3      0       0
                                              0 COMMON     3     3      0
                       i1_TMR0_CARGA
 ---------------------------------------------------------------------------------
 (4) i1_TMR0_CARGA                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _TMR0_CARGA
     _TMR0_init
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _SPI_master (ROOT)
   i1_TMR0_CARGA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Aug 05 12:40:57 2022

             _SSPSTATbits 0094                        l62 012E                        u20 0020  
                      u21 001F                        u30 0177                        u31 0176  
              _SPI_master 012F                       l202 0170                       l141 0022  
                     l150 0038                       l151 003C                       l152 0040  
                     l144 0024                       l153 006C                       l146 0028  
                     l147 002C                       l156 0183                       l148 0030  
                     l149 0034                       l191 0177                       l168 00FB  
                     l184 0162                       l185 0167                       l194 017D  
                     l188 0171                       l810 001B                       l820 006A  
                     l812 0020                       l822 006B                       l830 00CB  
                     l816 0044                       l808 0018                       l840 00DB  
                     l832 00CF                       l818 0066                       l842 00DD  
                     l834 00D1                       l844 00DF                       l836 00D5  
                     l852 00E5                       l828 00C0                       l860 0171  
                     l846 00E1                       l838 00D7                       l848 00E3  
                     l794 017E                       l882 0179                       l796 0182  
                     l884 0168                       l886 016D                       u130 015A  
                     u131 0159                       u150 0087                       u151 0086  
                     u167 0079                       u177 0097                       u187 00AA  
                     u197 00B6  TMR0_init@prescaler_VALUE 0075                      l1100 0106  
                    l1110 0126                      l1102 0109                      l1112 012C  
                    l1104 0112                      l1200 009A                      l1114 012D  
                    l1106 011B                      l1202 009E                      l1108 0121  
                    l1204 00A6                      l1206 00AD                      l1208 00B0  
                    l1250 00ED                      l1090 015A                      l1252 004C  
                    l1092 015C                      l1094 015E                      l1190 007C  
                    l1096 0161                      l1088 0153                      l1192 0082  
                    l1184 006D                      l1098 00FC                      l1194 0087  
                    l1186 0072                      l1196 0091                      l1188 0075  
                    l1198 0093                      i1l49 014B                      _TMR0 0001  
                    u4_20 0133                      u4_21 0132                      u5_20 013D  
                    u5_21 013C                      _main 006D                      _send 0079  
                    btemp 007E                      start 000C                     ?_main 0070  
                   _ANSEL 0188               ?_TMR0_CARGA 0070                     i1l156 0189  
                   i1l910 0184                     i1l912 0188                     i1l920 0141  
                   i1l922 0145                     i1l914 012F                     i1l924 0146  
                   i1l916 0133                     i1l918 013D                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
         __end_of_initOsc 00FC                     _setup 00FC                     pclath 000A  
         __end_of_spiInit 0168           __end_of_spiRead 0171                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 00BF  
             ?_SPI_master 0070                    ??_main 0020                    ?_setup 0070  
                  _ANSELH 0189               initOsc@freq 0075                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
       __end_of_TMR0_init 006D                 ??_initOsc 0073                    saved_w 007E  
        __end_of_spiWrite 017E                 ??_spiInit 0076                 ??_spiRead 0073  
 __end_of__initialization 0013             ?i1_TMR0_CARGA 0070            __pcstackCOMMON 0070  
           __end_of_setup 012F            _OPTION_REGbits 0081                   ??_setup 0077  
          ??i1_TMR0_CARGA 0070                __pmaintext 006D                __pintentry 0004  
            ??_TMR0_CARGA 0073                   _SSPSTAT 0094                _counter_02 0077  
      __end_of_TMR0_CARGA 0184                 ?_spiWrite 0070              ??_SPI_master 0070  
                 __ptext1 0178                   __ptext2 0168                   __ptext3 0171  
                 __ptext4 00FC                   __ptext5 0152                   __ptext6 00BF  
                 __ptext7 0017                   __ptext8 017E                   __ptext9 012F  
                 _initOsc 00BF                   _spiInit 0152                   _spiRead 0168  
    end_of_initialization 0013        __end_of_SPI_master 0152                ??_spiWrite 0073  
               _PORTBbits 0006                 _PORTCbits 0007                 _TMR0_init 0017  
    __end_ofi1_TMR0_CARGA 018A                 _TRISCbits 0087               spiWrite@dat 0073  
          _spiReceiveWait 0171                ?_TMR0_init 0070       start_initialization 000F  
            _counter_TMR0 007A    __end_of_spiReceiveWait 0178               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
             ??_TMR0_init 0073                  ?_initOsc 0070                  ?_spiInit 0073  
                ?_spiRead 0070      spiInit@sTransmitEdge 0075         interrupt_function 0004  
            i1_TMR0_CARGA 0184                  _PIE1bits 008C        spiInit@sDataSample 0073  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
                __ptext10 0184                  _devolver 0078                  _spiWrite 0178  
            spiInit@sType 0076         spiInit@sClockIdle 0074                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0073                _OSCCONbits 008F  
              _TMR0_CARGA 017E  
